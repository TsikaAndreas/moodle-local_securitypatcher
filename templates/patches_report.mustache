{{!
    This file is part of Moodle - https://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template local_codepatcher/patches_report

    Patches report dataTable.

    IDs required for JS:
    * patchesreporttable

    Classes required for JS:
    * datatable-loader
    * datatable-loader-overlay
    * loader
    * text
    * table

    Data attributes required for JS:
    * none

    Context variables required for this template:
    * patchid
    * filters
        * status
        * operation

    Example context (json):
    {
        "patchid": "15",
        "filters": {
            "status": "<select>...</select>",
            "operation": "<select>...</select>"
        }
    }
}}
<div class="datatable-loader">
    <div class="datatable-loader-overlay">
        <div class="loader"></div>
        <span class="text">{{#str}} loading, local_codepatcher {{/str}}.</span>
    </div>
</div>
<table id="patchesreporttable" class="table table-striped table-bordered nowrap" style="width: 100%">
    <thead>
    <tr>
        <th></th>
        <th>{{#str}} datatable:patchesreport:timecreated, local_codepatcher {{/str}}</th>
        <th>{{#str}} datatable:patchesreport:status, local_codepatcher {{/str}}</th>
        <th>{{#str}} datatable:patchesreport:operation, local_codepatcher {{/str}}</th>
        <th>{{#str}} datatable:patchesreport:actions, local_codepatcher {{/str}}</th>
    </tr>
    </thead>
</table>
{{#js}}
    require(['local_codepatcher/patches_report'], function(Report) {
        let options = {
            id: {{patchid}},
            filters: {{{filters}}},
        };
        Report.init(options);
    });
{{/js}}